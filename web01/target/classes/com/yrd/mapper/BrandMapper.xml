<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace  名称标签-->
<mapper namespace="com.yrd.mapper.BrandMapper">

    <!--
            数据库表的字段名称 和  实体类的属性名称 不一样，则不能自动封装数据
            *起别名 缺点：繁琐 解决：sql片段
            *resultMap：
                1.定义<resultMap>类
                2.在<select>标签中，使用resultMap属性替换 resultType属性
                    -->
    <!--
    id:唯一标识
    type：映射的类型
    -->
    <resultMap id="brandResultMap" type="brand">
        <!--id：完成主键的映射
                column：表的列名
                property：实体类的属性名
            result：完成一般字段的映射
                column：表的列名
                property：实体类的属性名
        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>


    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>

    <!--
    *参数占位符
        1.#{}:替换为？,为了防止sql注入
        2.${}:拼sql,存在sql注入问题
        3.使用时机：
            *参数传递的时候：#{}
            *表名或者列名不确定的时候使用${}
    *参数类型  parametertype可省略
    *特殊字符的处理:
        1.转义字符：
        2.CDATA区
           <![CDATA[
            <
            ]]>
    -->

    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand
        where id = #{id};
    </select>

    <!--条件查询-->
    <!--<select id="selectByCondition" resultMap="brandResultMap">
        select * from tb_brand where status = #{status} and company_name like #{companyName} and brand_name like #{brandName};
    </select>-->

    <!--动态条件查询
        *if :条件查询
        *问题：
            *恒等式 1=1(or,注入)，不好
            *mybatis <where>标签

    -->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="status != null">
                status = #{status}
            </if>
            <if test="companyName != null and companyName !=''">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName !=''">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
        <choose><!--相当于switch-->

            <when test="status != null">
                <!--相当于case-->
                status = #{status}
            </when>
            <when test="companyName != null and companyName !=''">
                company_name like #{companyName}
            </when>
            <when test="brandName != null and brandName !=''">
                brand_name like #{brandName}
            </when>
        </choose>
        </where>

    </select>


    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name,company_name,ordered,description,status)
        value (#{brandName},#{companyName},#{ordered},#{description},#{status})
    </insert>



    <update id="update">
        update tb_brand
        <set>
        <if test="brandName != null and brandName !=''">
            brand_name =#{brandName},
        </if>
        <if test="companyName != null and companyName !=''">
            company_name=#{companyName},
        </if>
        <if test="ordered != null ">
            ordered=#{ordered},
        </if>
        <if test="description != null and description !=''">
            description=#{description},
        </if>
        <if test="status != null">
            status=#{status}
        </if>

        </set>
        where id=#{id};

    </update>


    <delete id="deleteById">
        delete from tb_brand where id =#{id};

    </delete>
    <!--
    mybatis 会将数组参数，封装为一个Map集合
            *默认：array =数组
            *使用param注解改变map集合的默认key的名称
    -->

    <delete id="deleteByIds">
        delete from tb_brand where id
        in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        ;
    </delete>

    <!--分页查询-->
    <select id="selectByPage" resultMap="brandResultMap">
        select * from tb_brand limit #{begin}, #{size};
    </select>
    <select id="selectTotalCount" resultType="java.lang.Integer">
        select count(*) from tb_brand;
    </select>

    <select id="selectByPageAndCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="brand.status != null">
                status = #{brand.status}
            </if>
            <if test="brand.companyName != null and brand.companyName !=''">
                and company_name like #{brand.companyName}
            </if>
            <if test="brand.brandName != null and brand.brandName !=''">
                and brand_name like #{brand.brandName}
            </if>
        </where>

        limit #{begin},#{size} ;

    </select>

    <select id="selectTotalCountByCondition" resultType="java.lang.Integer">
        select count(*)
        from tb_brand
        <where>
            <if test="status != null">
                status = #{status}
            </if>
            <if test="companyName != null and companyName !=''">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName !=''">
                and brand_name like #{brandName} ;
            </if>
        </where>
    </select>
    <!--查询总记录-->


</mapper>